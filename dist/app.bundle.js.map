{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/ts/fourier.ts","src/ts/main.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Complex","prototype","add","this","re","im","mult","b","dft","x","X","N","k","sum","phi","TWO_PI","cos","sin","freq","amp","sqrt","phase","atan2","transformedPositions","fourier_1","positions","time","path","states","state","window","mousePressed","mouseReleased","sort","setup","triforceW","triforceH","createCanvas","windowWidth","windowHeight","background","width","height","triforce","nextIdx","curr","y","next","push","default","j","lerp","draw","point","mouseX","mouseY","stroke","noFill","beginShape","_i","positions_1","v","vertex","endShape","rotation","fourier","prevX","prevY","radius","ellipse","line","createVector","epicycles","unshift","strokeWeight","dt"],"mappings":"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","file":"app.bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","export default class Complex {\r\n    public im: number;\r\n    public re: number;\r\n\r\n    public constructor(a: number, b: number) {\r\n        this.re = a;\r\n        this.im = b;\r\n    }\r\n    \r\n    public add(c: Complex): Complex {\r\n      const re = this.re + c.re;\r\n      const im = this.im + c.im;\r\n      return new Complex(re, im);\r\n    }\r\n    \r\n    public mult(c: Complex): Complex {\r\n      const re = this.re * c.re - this.im * c.im;\r\n      const im = this.re * c.im + this.im * c.re;\r\n      return new Complex(re, im);\r\n    }\r\n  }\r\n  \r\n  export function dft(x: Complex[]): DFTResult[] {\r\n    const X: DFTResult[] = [];\r\n    const N = x.length;\r\n    for (let k = 0; k < N; k++) {\r\n      let sum = new Complex(0, 0);\r\n      for (let n = 0; n < N; n++) {\r\n        const phi = (TWO_PI * k * n) / N;\r\n        const c = new Complex(cos(phi), -sin(phi));\r\n        sum = sum.add(x[n].mult(c));\r\n      }\r\n      sum.re = sum.re / N;\r\n      sum.im = sum.im / N;\r\n      \r\n      let freq = k;\r\n      let amp = sqrt(sum.re * sum.re + sum.im * sum.im);\r\n      let phase = atan2(sum.im, sum.re);\r\n      X[k] = { re: sum.re, im: sum.im, freq, amp, phase };\r\n    }\r\n    return X;\r\n  }\r\n\r\n  export type DFTResult = {\r\n    re: number;\r\n    im: number;\r\n    freq: number;\r\n    amp: number;\r\n    phase: number;\r\n  };","import Complex, { dft, DFTResult } from \"./fourier\";\r\n\r\nlet positions: Complex[] = [];\r\nlet transformedPositions: DFTResult[];\r\nlet time = 0;\r\nlet path: PVector[] = [];\r\nconst states = {\r\n  NONE: -1,\r\n  USER: 0,\r\n  DRAW: 1\r\n};\r\nlet state = states.DRAW;\r\n\r\nwindow.mousePressed = () => {\r\n  state = states.USER;\r\n  positions = [];\r\n  time = 0;\r\n  path = [];\r\n}\r\n\r\nwindow.mouseReleased = () => {\r\n  state = states.DRAW;\r\n  transformedPositions = dft(positions);\r\n  transformedPositions.sort((a, b) => b.amp - a.amp);\r\n}\r\n\r\nwindow.setup = () => {\r\n  createCanvas(windowWidth, windowHeight);\r\n  background(0);\r\n\r\n  let triforceW, triforceH;\r\n  if (width < height) {\r\n    triforceW = width - 20;\r\n    triforceH = 13 * triforceW / 15;\r\n  } else {\r\n    triforceH = height - 20;\r\n    triforceW = 15 * triforceH / 13;\r\n  }\r\n\r\n  let triforce = [\r\n    -triforceW / 2, triforceH / 2,\r\n    -triforceW / 4, 0,\r\n    0, -triforceH / 2,\r\n    triforceW / 4, 0,\r\n    -triforceW / 4, 0,\r\n    0, triforceH / 2,\r\n    triforceW / 4, 0,\r\n    triforceW / 2, triforceH / 2,\r\n    0, triforceH / 2\r\n  ];\r\n\r\n  const steps = 50;\r\n  for (let i = 0; i < triforce.length; i += 2) {\r\n    let nextIdx = (i + 2 == triforce.length) ? 0 : i + 2;\r\n    let curr = {\r\n      x: triforce[i],\r\n      y: triforce[i + 1]\r\n    };\r\n    let next = {\r\n      x: triforce[nextIdx],\r\n      y: triforce[nextIdx + 1]\r\n    };\r\n\r\n    positions.push(new Complex(curr.x, curr.y));\r\n    for (let j = 1; j <= steps; j++) {\r\n      const re = lerp(curr.x, next.x, j / steps);\r\n      const im = lerp(curr.y, next.y, j / steps);\r\n      positions.push(new Complex(re, im));\r\n    }\r\n  }\r\n\r\n  transformedPositions = dft(positions);\r\n  transformedPositions.sort((a, b) => b.amp - a.amp);\r\n}\r\n\r\nfunction epicycles(x: number, y: number, rotation: number, fourier: DFTResult[]): PVector {\r\n  for (let i = 0; i < fourier.length; i++) {\r\n    let prevX = x;\r\n    let prevY = y;\r\n    let freq = fourier[i].freq;\r\n    let radius = fourier[i].amp;\r\n    let phase = fourier[i].phase;\r\n    x += radius * cos(freq * time + phase + rotation);\r\n    y += radius * sin(freq * time + phase + rotation);\r\n\r\n    stroke(255, 100);\r\n    noFill();\r\n    ellipse(prevX, prevY, radius * 2);\r\n    stroke(255);\r\n    line(prevX, prevY, x, y);\r\n  }\r\n  return createVector(x, y);\r\n}\r\n\r\nwindow.draw = () => {\r\n  background(0);\r\n  if (state == states.USER) {\r\n    let point = new Complex(mouseX - width / 2, mouseY - height / 2);\r\n    positions.push(point);\r\n    stroke(255);\r\n    noFill();\r\n    beginShape();\r\n    for (let v of positions) {\r\n      vertex(v.re + width / 2, v.im + height / 2);\r\n    }\r\n    endShape();\r\n  } else if (state == states.DRAW) {\r\n    let v = epicycles(width / 2, height / 2, 0, transformedPositions);\r\n    path.unshift(v);\r\n    beginShape();\r\n    noFill();\r\n    strokeWeight(2);\r\n    stroke(255, 255, 0);\r\n    for (let i = 0; i < path.length; i++) {\r\n      vertex(path[i].x, path[i].y);\r\n    }\r\n    endShape();\r\n\r\n    const dt = TWO_PI / transformedPositions.length;\r\n    time += dt;\r\n\r\n    if (time > TWO_PI) {\r\n      time = 0;\r\n      path = [];\r\n    }\r\n  }\r\n}"]}